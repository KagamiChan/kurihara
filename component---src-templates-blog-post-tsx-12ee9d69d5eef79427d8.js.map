{"version":3,"file":"component---src-templates-blog-post-tsx-12ee9d69d5eef79427d8.js","mappings":"yGAEA,IAAIA,EAAS,EAAQ,MACrBC,EAAQ,GAAa,CACnBC,OAAQF,EAAOE,OACfC,SAAUH,EAAOG,SACjBC,KAAM,CACJJ,EAAOK,MACPL,EAAOM,OACPN,EAAOO,QACPP,EAAOQ,QACPR,EAAOS,cAGXR,EAAQ,EAAoBA,EAAQ,GACnBD,EAAOE,OACLF,EAAOG,SACVH,EAAOK,MACNL,EAAOM,OACJN,EAAOO,QACTP,EAAOQ,QACHR,EAAOS,YACXT,EAAOO,O,kCCrBzBG,OAAOC,eAAeV,EAAS,aAA/B,CAA+CW,OAAO,IACtD,IACIT,EAAW,uBAGXI,EAAU,CAAC,qBACXC,EAAU,OACVC,EAAc,+bAElBR,EAAQY,WAAa,CACnBX,OATW,MAUXC,SAAUA,EACVC,KAAM,CATI,IACC,IAWTG,EACAC,EACAC,IAGJR,EAAQa,oBAAsBb,EAAQY,WACtCZ,EAAQC,OApBK,MAqBbD,EAAQE,SAAWA,EACnBF,EAAQI,MApBI,IAqBZJ,EAAQK,OApBK,IAqBbL,EAAQc,UAAYR,EACpBN,EAAQO,QAAUA,EAClBP,EAAQQ,YAAcA,EACtBR,EAAQM,QAAUA,C,kNCnBlB,MAAMS,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,IAAcC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAArBJ,CAAqB,QAC/B,+EAGAK,EAAYL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,QACtB,2IAGAO,EAAUP,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVJ,CAAU,QACpB,yBAGAQ,EAASR,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,QACnB,uCAGAS,EAAST,EAAAA,QAAOU,KAAIR,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAXJ,CAAW,MAEbW,EAAqDA,KAAO,IAADC,EACtE,MAAMC,GAAQC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,UAAU,IAErCC,GAAOC,EAAAA,EAAAA,IAAc,cAgBrBC,EAAQJ,KAAKK,MAAMP,EAAQQ,IAAKJ,EAAKK,gBAAgBC,QACrDC,EAAQC,IAAIR,EAAM,CAAC,kBAAmB,QAASE,EAAO,SAC5D,OACEO,EAAAA,EAAAA,KAAC3B,EAAO,CAAA4B,UACNC,EAAAA,EAAAA,MAACvB,EAAS,CAAAsB,SAAA,EACRD,EAAAA,EAAAA,KAACnB,EAAO,CAAAoB,SAAEH,EAAMK,WAChBD,EAAAA,EAAAA,MAACpB,EAAM,CAAAmB,SAAA,CAAC,MACFH,SAAa,QAARZ,EAALY,EAAOM,cAAM,IAAAlB,OAAR,EAALA,EAAemB,KAAK,OAAO,OAAGL,EAAAA,EAAAA,KAACjB,EAAM,CAAAkB,SAAEH,EAAMzC,SAAiB,IACjEyC,EAAMQ,OACLN,EAAAA,EAAAA,KAAA,KAAGO,KAAMT,EAAMQ,KAAME,OAAO,SAASC,IAAI,aAAYR,UACnDD,EAAAA,EAAAA,KAACU,EAAAA,EAAe,CAACjD,KAAMkD,EAAAA,aAKvB,E,wBChDd,MAAMC,EAAYtC,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,QACtB,0IAGAuC,EAASvC,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVJ,CAAU,QACnB,4EA8CN,MAvCmDwC,IAAc,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAb,KAAEnC,GAAMuB,EAC1D,MAAQa,eAAgBC,GAASrC,EAE3BsC,EAAc,IAAIC,KAAoC,QAAhCf,EAACa,SAAiB,QAAbZ,EAAJY,EAAMG,mBAAW,IAAAf,OAAb,EAAJA,EAAmBgB,oBAAY,IAAAjB,EAAAA,EAAI,GAE1DkB,EAAa,IAAIH,KAAmC,QAA/Bb,EAACW,SAAiB,QAAbV,EAAJU,EAAMG,mBAAW,IAAAb,OAAb,EAAJA,EAAmBgB,mBAAW,IAAAjB,EAAAA,EAAI,GAE9D,OACEf,EAAAA,EAAAA,MAACiC,EAAAA,EAAU,CAAAlC,SAAA,EACTD,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACC,OAAQT,SAAiB,QAAbT,EAAJS,EAAMG,mBAAW,IAAAZ,OAAb,EAAJA,EAAmBmB,SAEtCpC,EAAAA,EAAAA,MAACqC,EAAAA,GAAO,CAAAtC,SAAA,EACND,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CAACC,GAAG,aAAYxC,SAAE2B,SAAiB,QAAbR,EAAJQ,EAAMG,mBAAW,IAAAX,OAAb,EAAJA,EAAmBkB,SAC3CpC,EAAAA,EAAAA,MAACrB,EAAAA,GAAO,CAAAoB,SAAA,EACNC,EAAAA,EAAAA,MAACU,EAAS,CAAAX,SAAA,CAAC,OAETD,EAAAA,EAAAA,KAAA,QAAM0C,SAAyC,QAAjCrB,EAAEO,SAAiB,QAAbN,EAAJM,EAAMG,mBAAW,IAAAT,OAAb,EAAJA,EAAmBU,oBAAY,IAAAX,EAAAA,EAAI,GAAGpB,UACnD0C,EAAAA,EAAAA,IAAO,IAAIb,KAAKD,GAAc,gBAEhCe,QAAQhB,SAAiB,QAAbL,EAAJK,EAAMG,mBAAW,IAAAR,OAAb,EAAJA,EAAmBW,eACzBD,GAAcJ,IACb3B,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAA5C,SAAA,CAAE,WAEAD,EAAAA,EAAAA,KAAA,QAAM0C,SAAwC,QAAhClB,EAAEI,SAAiB,QAAbH,EAAJG,EAAMG,mBAAW,IAAAN,OAAb,EAAJA,EAAmBS,mBAAW,IAAAV,EAAAA,EAAI,GAAGvB,UAClD0C,EAAAA,EAAAA,IAAO,IAAIb,KAAKG,GAAa,qBAInCL,SAAiB,QAAbF,EAAJE,EAAMG,mBAAW,IAAAL,IAAjBA,EAAmBoB,SAAS9C,EAAAA,EAAAA,KAACa,EAAM,CAAAZ,SAAC,iBAEzCD,EAAAA,EAAAA,KAAA,OAAK+C,wBAAyB,CAAEC,QAAQpB,aAAI,EAAJA,EAAMqB,OAAQ,aAG1DjD,EAAAA,EAAAA,KAACf,EAAQ,KACTe,EAAAA,EAAAA,KAACkD,EAAAA,EAAI,MACM,C,uBC7DjB,IASIC,EATe,EAAQ,KASXC,CAAa,UAE7BC,EAAO/F,QAAU6F,C,mBCVjB,IAWIG,EAAeC,OAAO,uFAa1BF,EAAO/F,QAJP,SAAoBkG,GAClB,OAAOF,EAAaG,KAAKD,EAC3B,C,uBCvBA,IAAIL,EAAY,EAAQ,MACpBO,EAAa,EAAQ,MACrBC,EAAc,EAAQ,MAe1BN,EAAO/F,QANP,SAAoBkG,GAClB,OAAOE,EAAWF,GACdG,EAAYH,GACZL,EAAUK,EAChB,C,mBCdA,IAAII,EAAgB,kBAQhBC,EAAW,IAAMD,EAAgB,IACjCE,EAAU,kDACVC,EAAS,2BAETC,EAAc,KAAOJ,EAAgB,IACrCK,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IACxBK,EAAW,oBAEXC,EAAQD,EAAWD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAY7D,KAAK,KAAO,IAAM+D,EAAWD,EAAW,MAElHG,EAAW,MAAQ,CAACN,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUxD,KAAK,KAAO,IAGxGkE,EAAYhB,OAAOQ,EAAS,MAAQA,EAAS,KAAOO,EAAWD,EAAO,KAiB1EhB,EAAO/F,QARP,SAAqBkG,GAEnB,IADA,IAAIgB,EAASD,EAAUE,UAAY,EAC5BF,EAAUd,KAAKD,MAClBgB,EAEJ,OAAOA,CACT,C,uBCzCA,IAAIE,EAAa,EAAQ,MACrBC,EAAU,EAAQ,MAClBC,EAAe,EAAQ,MA2B3BvB,EAAO/F,QALP,SAAkBW,GAChB,MAAuB,iBAATA,IACV0G,EAAQ1G,IAAU2G,EAAa3G,IArBrB,mBAqB+ByG,EAAWzG,EAC1D,C,uBC3BA,IAAI4G,EAAW,EAAQ,MACnBC,EAAS,EAAQ,IACjBC,EAAc,EAAQ,MACtBC,EAAW,EAAQ,MACnBC,EAAa,EAAQ,MAyCzB5B,EAAO/F,QAdP,SAAc4H,GACZ,GAAkB,MAAdA,EACF,OAAO,EAET,GAAIH,EAAYG,GACd,OAAOF,EAASE,GAAcD,EAAWC,GAAcA,EAAWC,OAEpE,IAAIC,EAAMN,EAAOI,GACjB,MAhCW,gBAgCPE,GA/BO,gBA+BUA,EACZF,EAAWG,KAEbR,EAASK,GAAYC,MAC9B,C","sources":["webpack://kurihara/./node_modules/.pnpm/@fortawesome+free-solid-svg-icons@6.5.2/node_modules/@fortawesome/free-solid-svg-icons/faExternalLinkAlt.js","webpack://kurihara/./node_modules/.pnpm/@fortawesome+free-solid-svg-icons@6.5.2/node_modules/@fortawesome/free-solid-svg-icons/faUpRightFromSquare.js","webpack://kurihara/./src/components/hitokoto.tsx","webpack://kurihara/./src/templates/blog-post.tsx","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_asciiSize.js","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hasUnicode.js","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stringSize.js","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_unicodeSize.js","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isString.js","webpack://kurihara/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/size.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar source = require('./faUpRightFromSquare');\nexports.definition = {\n  prefix: source.prefix,\n  iconName: source.iconName,\n  icon: [\n    source.width,\n    source.height,\n    source.aliases,\n    source.unicode,\n    source.svgPathData\n  ]};\n\nexports.faExternalLinkAlt = exports.definition;\nexports.prefix = source.prefix;\nexports.iconName = source.iconName;\nexports.width = source.width;\nexports.height = source.height;\nexports.ligatures = source.aliases;\nexports.unicode = source.unicode;\nexports.svgPathData = source.svgPathData;\nexports.aliases = source.aliases;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'up-right-from-square';\nvar width = 512;\nvar height = 512;\nvar aliases = [\"external-link-alt\"];\nvar unicode = 'f35d';\nvar svgPathData = 'M352 0c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9L370.7 96 201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L416 141.3l41.4 41.4c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6V32c0-17.7-14.3-32-32-32H352zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faUpRightFromSquare = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;","import { useMemo, FunctionComponent } from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { get, size } from 'lodash'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons/faExternalLinkAlt'\nimport tw from 'twin.macro'\n\nimport { FooterWrapper } from './common'\n\nconst Wrapper = styled(FooterWrapper)`\n  ${tw`flex justify-center mt-32 mb-8`}\n`\n\nconst Container = styled.div`\n  ${tw`bg-gray-100 p-4 text-sm`}\n`\n\nconst Content = styled.div`\n  ${tw`whitespace-pre-wrap`}\n`\n\nconst Footer = styled.div`\n  ${tw`text-right ml-16`}\n`\n\nconst Source = styled.span``\n\nexport const Hitokoto: FunctionComponent<Record<string, never>> = () => {\n  const order = useMemo(() => Math.random(), [])\n\n  const data = useStaticQuery<Queries.HitokotoQuery>(graphql`\n    query Hitokoto {\n      allHitokotoYaml {\n        edges {\n          node {\n            author\n            id\n            content\n            source\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  const index = Math.floor(order * size(data.allHitokotoYaml.edges))\n  const entry = get(data, ['allHitokotoYaml', 'edges', index, 'node'])\n  return (\n    <Wrapper>\n      <Container>\n        <Content>{entry.content}</Content>\n        <Footer>\n          —— {entry?.author?.join(' / ')} - <Source>{entry.source}</Source>{' '}\n          {entry.link && (\n            <a href={entry.link} target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={faExternalLinkAlt} />\n            </a>\n          )}\n        </Footer>\n      </Container>\n    </Wrapper>\n  )\n}\n","/* eslint-disable react/no-danger */\n\nimport { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport tw from 'twin.macro'\n\nimport { SiteTitle } from '../components/site-title'\nimport { Hitokoto } from '../components/hitokoto'\nimport { Meta } from '../components/meta'\nimport { Article, Content, Title } from '../components/common'\nimport { BaseLayout } from '../components/base-layout'\n\nconst Timestamp = styled.div`\n  ${tw`text-gray-500 text-lg mb-4`}\n`\n\nconst Notice = styled.div`\n  ${tw`text-orange-500`}\n`\n\ninterface Props {\n  data: Queries.BlogPostBySlugQuery\n}\n\nconst BlogPostTemplate: FunctionComponent<Props> = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  const publishDate = new Date(post?.frontmatter?.publish_date ?? 0)\n\n  const reviseDate = new Date(post?.frontmatter?.revise_date ?? 0)\n\n  return (\n    <BaseLayout>\n      <SiteTitle suffix={post?.frontmatter?.title} />\n\n      <Article>\n        <Title id=\"post-title\">{post?.frontmatter?.title}</Title>\n        <Content>\n          <Timestamp>\n            发布于\n            <time dateTime={post?.frontmatter?.publish_date ?? ''}>\n              {format(new Date(publishDate), 'yyyy-MM-dd')}\n            </time>\n            {Boolean(post?.frontmatter?.revise_date) &&\n              +reviseDate > +publishDate && (\n                <>\n                  | 最后修订于\n                  <time dateTime={post?.frontmatter?.revise_date ?? ''}>\n                    {format(new Date(reviseDate), 'yyyy-MM-dd')}\n                  </time>\n                </>\n              )}\n            {!!post?.frontmatter?.draft && <Notice>这篇文章还是草稿</Notice>}\n          </Timestamp>\n          <div dangerouslySetInnerHTML={{ __html: post?.html || '' }} />\n        </Content>\n      </Article>\n      <Hitokoto />\n      <Meta />\n    </BaseLayout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        publish_date\n        revise_date\n        draft\n      }\n    }\n  }\n`\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;\n"],"names":["source","exports","prefix","iconName","icon","width","height","aliases","unicode","svgPathData","Object","defineProperty","value","definition","faUpRightFromSquare","ligatures","Wrapper","styled","FooterWrapper","withConfig","displayName","componentId","Container","div","Content","Footer","Source","span","Hitokoto","_entry$author","order","useMemo","Math","random","data","useStaticQuery","index","floor","_size","allHitokotoYaml","edges","entry","_get","_jsx","children","_jsxs","content","author","join","link","href","target","rel","FontAwesomeIcon","faExternalLinkAlt","Timestamp","Notice","_ref","_post$frontmatter$pub","_post$frontmatter","_post$frontmatter$rev","_post$frontmatter2","_post$frontmatter3","_post$frontmatter4","_post$frontmatter$pub2","_post$frontmatter5","_post$frontmatter6","_post$frontmatter$rev2","_post$frontmatter7","_post$frontmatter8","markdownRemark","post","publishDate","Date","frontmatter","publish_date","reviseDate","revise_date","BaseLayout","SiteTitle","suffix","title","Article","Title","id","dateTime","format","Boolean","_Fragment","draft","dangerouslySetInnerHTML","__html","html","Meta","asciiSize","baseProperty","module","reHasUnicode","RegExp","string","test","hasUnicode","unicodeSize","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","result","lastIndex","baseGetTag","isArray","isObjectLike","baseKeys","getTag","isArrayLike","isString","stringSize","collection","length","tag","size"],"sourceRoot":""}